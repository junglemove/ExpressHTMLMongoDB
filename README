/*************/
installer MongoDB
cmd: mongod -version
créer le folder Data/db pour correctement initialiser mongo

Exemple de jeu de données:
https://docs.mongodb.com/getting-started/shell/import-data/

upload:
https://raw.githubusercontent.com/mongodb/docs-assets/primer-dataset/primer-dataset.json

initializ db with cmd:
cmd>mongoimport --db test --collection restaurants --drop --file ~/downloads/primer-dataset.json
cmd>mongod to start the serveur


connect to MongoDb from cmd:
cmd>mongo
ouvre un pipe JS V8 dan la cmd
show databases

db.restaurants.count();
db.restaurants.find().toArray().length;
db.restaurants.find({borough: 'Bronx'}).toArray().length; // tous les restaurants du Bronx
db.restaurants.find({borough: /^B/}).toArray().length;  // tous les restaurants dont le quartier commence par B (Regex)
db.restaurants.find({borough: 'Bronx', cuisine:'Backery'}).toArray().length;  // tous les restaurants Backery du Bronx

MongoDB offre des opérateurs avancés:
https://docs.mongodb.com/v3.0/reference/operator/query/
db.restaurants.find({$or: [{borough: 'Bronx'}, {borough: 'Brooklyn'}]}).toArray().length // tous les restaurants de Brooklyn OU Bronx

Recherche sous objet:
db.restaurants.find({'address.street': 'Morris Park Ave'}).toArray().length;
db.restaurants.find({'grades.score': 0}).toArray().length;
db.restaurants.find({'grades.score': {$gt:100}}).toArray().length;
db.restaurants.find({'grades.score': {$gt:90}}).toArray().length;

/***************/
Changer de base:
/***************/
use addressbook
db
db.createCollection('contacts')
db.contacts.insert({prenom: 'Steve', nom: 'Ballmer'})
db.contacts.insert({prenom: 'Larry', nom: 'Page'})
db.contacts.find()
exit

/****/
mongoosejs.com/docs/subdocs.html
db validators...

var mongoose = require('mongoose');

var Contact = mongoose.model('contacts',{ // les methodes find() et findById() sont déjà implémentés par le model mongo
   prenom: String,
    nom: String
});// http://mongoosejs.com/docs/models.html

/****************/
    TESTS
/****************/
Mocha+Chai/Jasmine

"mocha test/model/contact.test.js"
or "mocha --recursive"
or use "mocha" only defining mocha.opts

webstorm library settings <=> npm install typings for VS